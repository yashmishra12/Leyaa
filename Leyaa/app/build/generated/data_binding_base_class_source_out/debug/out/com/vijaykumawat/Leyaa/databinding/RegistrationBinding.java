// Generated by view binder compiler. Do not edit!
package com.vijaykumawat.Leyaa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vijaykumawat.Leyaa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RegistrationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView alreadyRegistered;

  @NonNull
  public final EditText fullName;

  @NonNull
  public final EditText password1;

  @NonNull
  public final Button sign;

  @NonNull
  public final EditText username;

  private RegistrationBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView alreadyRegistered, @NonNull EditText fullName, @NonNull EditText password1,
      @NonNull Button sign, @NonNull EditText username) {
    this.rootView = rootView;
    this.alreadyRegistered = alreadyRegistered;
    this.fullName = fullName;
    this.password1 = password1;
    this.sign = sign;
    this.username = username;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RegistrationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RegistrationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.registration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RegistrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alreadyRegistered;
      TextView alreadyRegistered = ViewBindings.findChildViewById(rootView, id);
      if (alreadyRegistered == null) {
        break missingId;
      }

      id = R.id.fullName;
      EditText fullName = ViewBindings.findChildViewById(rootView, id);
      if (fullName == null) {
        break missingId;
      }

      id = R.id.password1;
      EditText password1 = ViewBindings.findChildViewById(rootView, id);
      if (password1 == null) {
        break missingId;
      }

      id = R.id.sign;
      Button sign = ViewBindings.findChildViewById(rootView, id);
      if (sign == null) {
        break missingId;
      }

      id = R.id.username;
      EditText username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new RegistrationBinding((ConstraintLayout) rootView, alreadyRegistered, fullName,
          password1, sign, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
